def buildNumber = currentBuild.number
def previousBuildNumber = currentBuild.number - 1
 def credentials = credentials('my-docker-id');
def filePath = '/var/lib/jenkins/workspace/nginx-demo/nginx-hello'
pipeline {
    agent any
        stages {
            stage('Checkout & Github Repo Clone') {
                steps  {
                     checkout changelog: false,
                         scm: scmGit(userRemoteConfigs: [
                         [ credentialsId: 'my-github-id',
                           url: 'https://github.com/erdemdoganayy/nginx-demos' ]
                         ])
                }
            }
             stage('Docker Build & Push') {
                steps  {
                //    withCredentials([
                //     string(credentialsId: 'DockerHub-Username', variable: 'DockerHub-Username'),
                //     string(credentialsId: 'DockerHub-Password', variable: 'DockerHub-Password')
                //     ]) {
                        

                        sh "docker build -t nginx_hello:${buildNumber} ${filePath}"
                        sh "docker image rm nginx_hello:${previousBuildNumber}"
                       
                        sh "docker login -u ${credentials.username} -p ${credentials}"
                    //    sh "docker push ${DockerHub-Username}:nginx_hello:${buildNumber}"
                    // }
                }
            }
        
               
            
            // stage('Github Repo ZIP') {
            //     steps {
            //         script {
            //            sh "ls"
            //         }
            //     }
            // }

    //         stage('Upload Aws S3') {
    //             steps {
    //             script {
    //                     def s3Bucket = 'myjnknsbckt'
    //                     def awsCliPath = '/usr/local/bin/aws'
    //                     withCredentials([[
    //                         $class: 'AmazonWebServicesCredentialsBinding',
    //                         accessKeyVariable: 'AWS_ACCESS_KEY_ID',
    //                         secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',
    //                         credentialsId: 'jenkins-user'
    //                     ]]) {
    //                         sh """
    //                         ${awsCliPath} s3 cp /var/lib/jenkins/workspace/task-jenkins/buckets/examples_${buildNumber}.zip s3://${s3Bucket}/
    //   //   S3 Clean ?       ${awsCliPath} s3 rm s3://${s3Bucket}/examples_${previousBuildNumber}.zip
    //                         """
    //                     }
    //             }
    //             }
    //         }
            // stage('Clean Up') {
            //     steps {
            //     script {
            //             sh "cd buckets && rm -rf examples_${previousBuildNumber}.zip"
            //         }
            //     }
            // }
        }
}
