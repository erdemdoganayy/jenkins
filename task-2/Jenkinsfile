def buildNumber = currentBuild.number
def previousBuildNumber = currentBuild.number - 1
def credentials = credentials('my-docker-id');
def filePath = '/var/lib/jenkins/workspace/nginx-demo/nginx-hello'
def deployPipeline = 'nginx-demo-deploy'
pipeline {
    agent any
    parameters {
        string(name: 'BUILD_NUMBER', defaultValue: 'buildNumber', description: 'Build number to pass to the next pipeline')
    }

        stages {
            stage('Checkout & Github Repo Clone') {
                steps  {
                     checkout changelog: false,
                         scm: scmGit(userRemoteConfigs: [
                         [ credentialsId: 'my-github-id',
                           url: 'https://github.com/erdemdoganayy/nginx-demos' ]
                         ])
                }
            }
             stage('Docker Build & Push') {
                steps  {
                    script {
                   withCredentials([
                    string(credentialsId: 'DockerHub-Username', variable: 'DockerHub-Username'),
                    string(credentialsId: 'DockerHub-Password', variable: 'DockerHub-Password')
                    ]) {
                        
                        // Docker Build
                        sh "docker build -t nginx_hello:${buildNumber} ${filePath}"
                        sh "docker image rm nginx_hello:${previousBuildNumber}"

                        // Docker Push
                        sh "docker tag nginx_hello jrdeveloper06/nginx_hello:${buildNumber}"
                        sh "docker push jrdeveloper06/nginx_hello:${buildNumber}"
                        sh "docker image rm jrdeveloper06/nginx_hello:${previousBuildNumber}"
         
                    }
                }
                }
                
            }
             stage("Deploy") {
                steps {
                           build job: "${deployPipeline}", parameters: [string(name: 'BUILD_NUMBER', value: "${params.BUILD_NUMBER}")]
                   }
                }
        
        }
}
