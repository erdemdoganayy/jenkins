def VirtualMachines = [
        host: [
            [
                name: 'vagrant',
                host: '192.168.56.158',
                user: '',
                identityFile: '',
                allowAnyHosts: true,
            ]
        ],
]
pipeline {
    agent any
    environment {
        APP_DIR = 'jenkinsapp'
        ZIP_FILE_NAME = "jenkinsapp_${BUILD_NUMBER}.zip"
        S3_BUCKET = 'jenkinsfastapi'
    }
    stages {
        stage('Checkout & Clone Repo') {
            steps {
                checkout changelog: false,
                         scm: scmGit(userRemoteConfigs: [
                         [ credentialsId: 'my-github-id',
                           url: 'https://github.com/erdemdoganayy/fastapi-jenkins' ]
                         ])
            }
        }

        //STAGe isimeriNİ YAZDIR
        stage('Remote SSH') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'vagrant_vm_jenkinsid', usernameVariable: 'USERNAME', keyFileVariable: 'RSA_KEY')])
                    {
                        for (server in VirtualMachines.host) {
                            server.user = USERNAME
                            server.identityFile = RSA_KEY

                            stage("${server.name} - Repo Put To VM") {
                                // SSH PUT İLE JENKİNS WORKSPACE DİZİNİNDEKİ İNDİRİLEN REPOYU KARŞI SUNUCUYA AKTARIYOR || AKTARILMIŞ DOSYANIN ADINI DEĞİŞTİRİP ESKİSİNİ SİLİYOR
                                sshPut remote: server, from: '.', into: '/home/vagrant'
                                sshCommand remote: server, command: "cp -R ${JOB_NAME} ${APP_DIR} && rm -rf ${JOB_NAME}"
                            }
                            stage("${server.name} - Docker-Compose Down") {
                                // BELİRTİLMİŞ KLASÖRE GİRİYOR VE DOCKER COMPOSE DOWN YAPIYOR
                                sshCommand remote: server, command: "cd ${APP_DIR} ; docker compose down"
                            }
                            stage("${server.name} - Backup & Copy App") {
                                // ESKİ KODLARI ZİP HALİNE GETİRİP S3'E YEDEKLİYOR
                                sshCommand remote: server, command: "zip -r ${ZIP_FILE_NAME} ${APP_DIR}"
                                sshCommand remote: server, command: "aws s3 cp ${ZIP_FILE_NAME} s3://${env.S3_BUCKET}/ "
                            }
                            stage("${server.name} - Docker-Compose Build & Up") {
                                // BELİRTİLMİŞ KLASÖRE GİRİP DOCKER COMPOSE BUILD VE DOCKER COMPOSE UP YAPIYOR 
                                sshCommand remote: server, command: "cd ${APP_DIR} && docker compose build"

                                sshCommand remote: server, command: "cd  ${APP_DIR} && docker compose up -d "
                            }
                            stage("${server.name} - Clean Up"){
                                // OLUŞTURULAN YEDEK ZIP SİLİNİYOR
                                sshCommand remote: server, command: "rm -rf ${ZIP_FILE_NAME}"
                            }
                            stage("${server.name} - Output Shows" {
                                // BIR ÖNCEKİ STEPTE AYAĞA KALKAN CONTAINER'A CURL ATARAK 10 KERE ÇIKTISINI YAZDIRIYOR
                                for (int i = 1; i <= 10; i++) {
                                    sshCommand remote: server, command: 'curl --include http://localhost:8000'
                                }

                            }
                        }
                    }
                }
            }
        }
    }
}
